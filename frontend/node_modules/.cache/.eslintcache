[{"/home/ambri/Desktop/Dragon Tiger/frontend/src/index.js":"1","/home/ambri/Desktop/Dragon Tiger/frontend/src/App.js":"2","/home/ambri/Desktop/Dragon Tiger/frontend/src/router_history.js":"3","/home/ambri/Desktop/Dragon Tiger/frontend/src/components/Home.js":"4","/home/ambri/Desktop/Dragon Tiger/frontend/src/components/Game.js":"5","/home/ambri/Desktop/Dragon Tiger/frontend/src/components/table/table.jsx":"6"},{"size":221,"mtime":1638463067458,"results":"7","hashOfConfig":"8"},{"size":451,"mtime":1638463067458,"results":"9","hashOfConfig":"8"},{"size":87,"mtime":1638463067458,"results":"10","hashOfConfig":"8"},{"size":816,"mtime":1638587514415,"results":"11","hashOfConfig":"8"},{"size":2230,"mtime":1638463067458,"results":"12","hashOfConfig":"8"},{"size":3629,"mtime":1638463067458,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"sy77k3",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"16"},"/home/ambri/Desktop/Dragon Tiger/frontend/src/index.js",[],["29","30"],"/home/ambri/Desktop/Dragon Tiger/frontend/src/App.js",[],"/home/ambri/Desktop/Dragon Tiger/frontend/src/router_history.js",[],"/home/ambri/Desktop/Dragon Tiger/frontend/src/components/Home.js",[],"/home/ambri/Desktop/Dragon Tiger/frontend/src/components/Game.js",["31"],"import React, { useEffect, useRef, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport io from \"socket.io-client\";\nimport Table from \"./table/table\";\n\nconst Game = () => {\n  const { id } = useParams();\n  const [gameSpec, setGameSpec] = useState({});\n  const [card, setCard] = useState(\"\");\n  const [bet, setBet] = useState(\"\");\n  const [target, setTarget] = useState(\"\");\n  const [dragonCard, setDragonCard] = useState(\"\")\n  const [tigerCard, setTigerCard] = useState(\"\")\n\n  const socket = useRef(null);\n\n  const handleChange = (e) => {\n    setCard(e.target.value);\n  };\n\n  const handleChangeBet = (e) => {\n    setBet(e.target.value);\n  };\n\n  const handleChangeTarget = (e) => {\n    setTarget(e.target.value);\n  };\n\n  useEffect(() => {\n    socket.current = io(\"http://localhost:8000\", {\n      path: \"/ws/socket.io\",\n      query: { game_id: id },\n      transports: [\"websocket\"],\n    });\n  }, []);\n\n  useEffect(() => {\n    socket.current.on(\"on_connect_data\", (data) => {\n      setGameSpec(data);\n    });\n  }, []);\n\n  useEffect(() => {\n    socket.current.on(\"send_dragon_card\", (data) => {\n      setDragonCard(data.card)\n    })\n  }, [])\n\n\n  useEffect(() => {\n    socket.current.on(\"send_tiger_card\", (data) => {\n      setTigerCard(data.card)\n    })\n  }, [])\n\n  const sendCard = (e) => {\n    e.preventDefault();\n    socket.current.emit(\"scan_card\", {\n      card: card,\n      game_round_id: gameSpec.game_round_id\n    });\n  };\n\n  const sendBet = (e) => {\n    e.preventDefault();\n    socket.current.emit(\"receive_bet\", {\n      bet: bet,\n    });\n  };\n\n  const sendTarget = (e) => {\n    e.preventDefault();\n    socket.current.emit(\"receive_target\", {\n      target: target,\n    });\n  };\n\n  return (\n    <div>\n      <Table\n        gameSpec={gameSpec}\n        sendCard={sendCard}\n        sendBet={sendBet}\n        card={card}\n        handleChange={handleChange}\n        handleChangeBet={handleChangeBet}\n        bet={bet}\n        handleChangeTarget={handleChangeTarget}\n        target={target}\n        sendTarget={sendTarget}\n        dragonCard={dragonCard}\n        tigerCard={tigerCard}\n        socket={socket}\n        start_timestamp={gameSpec.start_timestamp}\n      />\n    </div>\n  );\n};\n\nexport default Game;\n","/home/ambri/Desktop/Dragon Tiger/frontend/src/components/table/table.jsx",["32","33"],"import {useEffect, useRef, useState} from \"react\";\nimport \"./index.css\";\n\n\nconst Table = ({\n  gameSpec,\n  sendCard,\n  card,\n  handleChange,\n  handleChangeBet,\n  bet,\n  sendBet,\n  handleChangeTarget,\n  target,\n  sendTarget,\n    tigerCard,\n    dragonCard,\n    socket,\n    start_timestamp\n}) => {\n    console.log(start_timestamp)\n    const [seconds, setSeconds]  = useState(15)\n    const [renderBet, setRenderBets] = useState(true)\n    const [dragonOn, setDragonOn] = useState(true)\n    const [tigerOn, setTigerOn] = useState(false)\n\n  useEffect(() => {\n      if (seconds !== undefined) {\n          let myInterval = setInterval(() => {\n              if (seconds > 0) {\n                  setSeconds(seconds - 1);\n              }\n              if (seconds === 0) {\n                  clearInterval(myInterval)\n                  setRenderBets(false)\n              }\n          }, 1000)\n          return ()=> {\n              clearInterval(myInterval);\n          };\n      }\n    }, [seconds]);\n\n\n    const handleClickOnBets = (e) => {\n      const data = {\n        amount: e.target.value,\n        type: dragonOn ? \"dragon\" : \"tiger\"\n      }\n      socket.current.emit(\"place_bet\", data)\n    }\n\n    const renderBets = () => {\n      if (renderBet) {\n        return (\n            <>\n            <div>\n              <button value={1} onClick={handleClickOnBets}>1</button>\n            </div>\n          <div>\n            <button value={5} onClick={handleClickOnBets}>5</button>\n          </div>\n          <div>\n            <button value={10} onClick={handleClickOnBets}>10</button>\n          </div>\n        </>\n        )\n      }\n    }\n  const renderClickedButton = () => {\n      if (dragonOn) {\n        return (\n            <div>\n              <h1>Dragon</h1>\n            </div>\n        )\n      } else {\n        return (\n            <div>\n              <h1>Tiger</h1>\n            </div>\n        )\n      }\n  }\n\n  return (\n    <div className=\"cr\">\n      <div className=\"table\">\n        <h1>welcome to the table</h1>\n        <p>min_bet: {gameSpec.min_bet || \"\"}</p>\n        <p>max_bet: {gameSpec.max_bet || \"\"}</p>\n        <form onSubmit={sendCard}>\n          <input\n            placeholder=\"Place Your Bets...\"\n            type=\"text\"\n            className=\"form-control\"\n            aria-label=\"Sizing example input\"\n            aria-describedby=\"inputGroup-sizing-sm\"\n            onChange={handleChangeBet}\n            value={bet}\n          />\n          <br />\n          <input\n            placeholder=\"place bets on dragon/tiger...\"\n            type=\"text\"\n            className=\"form-control\"\n            aria-label=\"Sizing example input\"\n            aria-describedby=\"inputGroup-sizing-sm\"\n            onChange={handleChangeTarget}\n            value={target}\n          />\n          <br />\n          <input\n            placeholder=\"Deal card...\"\n            type=\"text\"\n            className=\"form-control\"\n            aria-label=\"Sizing example input\"\n            aria-describedby=\"inputGroup-sizing-sm\"\n            onChange={handleChange}\n            value={card}\n          />\n          <button>Submit</button>\n          {seconds}\n        </form>\n        <div>\n          <h1>{dragonCard}</h1>\n        </div>\n\n        <div>\n          <h1>{tigerCard}</h1>\n        </div>\n        <button onClick={e => {\n          setDragonOn(true)\n          setTigerOn(false)\n        }}>Dragon</button>\n        <button\n            onClick={(e) => {\n              setTigerOn(true)\n              setDragonOn(false)\n            }}\n        >Tiger</button>\n        {renderClickedButton()}\n        {renderBets()}\n      </div>\n    </div>\n  );\n};\n\nexport default Table;\n",{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","severity":1,"message":"39","line":35,"column":6,"nodeType":"40","endLine":35,"endColumn":8,"suggestions":"41"},{"ruleId":"42","severity":1,"message":"43","line":1,"column":20,"nodeType":"44","messageId":"45","endLine":1,"endColumn":26},{"ruleId":"42","severity":1,"message":"46","line":25,"column":12,"nodeType":"44","messageId":"45","endLine":25,"endColumn":19},"no-native-reassign",["47"],"no-negated-in-lhs",["48"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["49"],"no-unused-vars","'useRef' is defined but never used.","Identifier","unusedVar","'tigerOn' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"50","fix":"51"},"Update the dependencies array to be: [id]",{"range":"52","text":"53"},[918,920],"[id]"]